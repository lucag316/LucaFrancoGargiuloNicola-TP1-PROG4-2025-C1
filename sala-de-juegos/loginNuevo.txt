
import { Component } from '@angular/core';
import { Router, RouterModule } from '@angular/router'
import { FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { MatSnackBar }  from '@angular/material/snack-bar';
import { SupabaseService } from '../../services/supabase.service';

import { SupabaseClient, createClient } from '@supabase/supabase-js';
import { environment } from '../../enviroments/enviroment';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrl: './login.component.css',
  imports: [FormsModule, CommonModule, RouterModule], //pongo el FormsModule aca sino me tira error en el HTML ngForm, el RouterModule es para que me funcione el routerLink en el html
  standalone: true
})
export class LoginComponent {

  username: string = '';
  password: string = '';
  isLoading = false;
  mensaje: string = '';

  constructor(
    private router: Router, 
    private snackBar: MatSnackBar,
    private supabase: SupabaseService
  ) {}

  async onLogin() {
    this.isLoading = true;
    this.mensaje = '';
  
    try {
      await this.supabase.signInWithUsername(this.username, this.password);
      this.showMessage('¡Bienvenido!', false);
      this.router.navigate(['/home']);
    } catch (error: any) {
      this.mensaje = error.message;
      this.showMessage(error.message, true);
    } finally {
      this.isLoading = false;
    }
  }

  private getUserFriendlyError(error: string): string {
    if (error.includes('Invalid login credentials')) {
      return 'Usuario o contraseña incorrectos';
    }
    return 'Error al iniciar sesión. Intenta nuevamente.';
  }

  /*
  * mensaje: el texto que quieras mostrar.
  * esError: si es true, le da la clase snackbar-error (rojo); si es false, le da snackbar-success (verde).
  * */
  showMessage(mensaje: string, esError: boolean = false) {
    this.snackBar.open(mensaje, 'Cerrar', {
      duration: 3000,
      horizontalPosition: 'center',
      verticalPosition: 'top',
      panelClass: [esError ? 'snackbar-error' : 'snackbar-success']
    });
  }

}
