











import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { RouterModule, Router } from '@angular/router';
import { MatSnackBar }  from '@angular/material/snack-bar';
import { SupabaseService } from '../../services/supabase.service';

@Component({
  selector: 'app-register',
  imports: [FormsModule, CommonModule, RouterModule],
  templateUrl: './register.component.html',
  styleUrl: './register.component.css',
  standalone: true
})
export class RegisterComponent {

  username: string = '';
  password: string = '';
  email: string = '';
  phone: string = '';

  constructor(
    private router: Router, 
    private snackBar: MatSnackBar,
    private supabaseService: SupabaseService
  ) {}

  /**
   * Maneja el proceso de registro de usuario.
   * 
   * Si todos los campos están completos, simula un registro exitoso
   * y redirige al usuario a la página de login (/login).
   * De lo contrario, muestra un mensaje de error.
   */
  onRegister() {
    if (this.username && this.password && this.email && this.phone) {
      console.log('Registro exitoso');

      this.showMessage('Registro exitoso', false); // verde

      // Después del registro, podría guardar los datos en un servicio o backend
      // Por ahora simplemente redirige al home
      this.router.navigate(['/home']);
    } else {
      this.showMessage('ERROR, vuelva a registrarse', true); // rojo
    }
  }
  

  /*
  * mensaje: el texto que quieras mostrar.
  * esError: si es true, le da la clase snackbar-error (rojo); si es false, le da snackbar-success (verde).
  * */
  showMessage(mensaje: string, esError: boolean = false) {
    this.snackBar.open(mensaje, 'Cerrar', {
      duration: 3000,
      horizontalPosition: 'center',
      verticalPosition: 'top',
      panelClass: [esError ? 'snackbar-error' : 'snackbar-success']
    });
  }
}
